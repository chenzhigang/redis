/**
 * Stream类型
 * Redis Stream作为一种自Redis 5.0起引入的高级数据结构，专为存储和处理有序且持久的消息流而设计。
 * 可视作一个分布式的、具备持久特性的消息队列，通过唯一的键名来标识每个Stream，其中容纳了多个携带时间戳和唯一标识符的消息实体
 * </>
 * 每条存储于Stream中的消息都具有全球唯一的message ID，该ID内嵌时间戳和序列编号，旨在确保即使在复杂的集群部署中仍能保持消息的严格时序性。
 * 这些消息内容会持久存储在Redis中，确保即使服务器重启也能安全恢复
 * </>
 * 生产者利用XADD指令将新消息添加到Stream中，而消费者则通过XREAD或针对多消费者组场景优化的XREADGROUP命令来读取并处理消息。
 * XREADGROUP尤其擅长处理多消费者组间的公平分配和持久订阅，确保消息的公正、有序送达各个消费者
 * </>
 * Stream核心特性之一是支持消费者组机制，消费者组内的不同消费者可独立地消费消息，并通过XACK命令确认已消费的消息，从而实现了消息的持久化消费和至少一次（at-least-once）交付保证。
 * 当消息量超出消费者处理能力时，未处理的消息可在Stream中积压，直到达到预设的最大容量限制。
 * 此外，还能设定消息的有效期（TTL），逾期未被消费的消息将自动剔除。
 * 即使在网络传输过程中消息遭受损失，亦可通过message ID保障消息的幂等性重新投递。
 * 尽管网络条件可能导致消息到达消费者的时间顺序与生产者发出的顺序有所偏差，但Stream机制确保了每个消息在其内在的时间上下文中依然保持着严格的顺序关系。
 * </>
 * Redis Stream作为一个集消息持久化、多消费者公平竞争、消息追溯和排序等功能于一体的强大消息队列工具，
 * 已在日志采集、实时数据分析、活动追踪等诸多领域展现出卓越的适用性和价值。
 */
package org.czg.redis.center.biz.stream;