/**
 * 数据缓存
 * </>
 * 在高并发访问的场景下，数据库经常成为系统的瓶颈。
 * Redis因其内存存储、读取速度快的特点，常被用作数据库查询结果的缓存层，有效降低数据库负载，提高整体系统的响应速度。这也是我们使用场景频率最高的一个。
 * </>
 * 通常我们选择使用String类型来存储数据库查询结果，如单个实体对象的JSON序列化形式
 * </>
 * 而使用Redis作为缓存使用时，有一些特别需要注意的事项：
 * 缓存穿透：当查询的数据在数据库和缓存中均不存在时，可能会导致大量的无效请求直接打到数据库。可通过布隆过滤器预防缓存穿透。
 * 缓存雪崩：若大量缓存在同一时刻失效，所有请求都会涌向数据库，造成瞬时压力过大。可通过设置合理的过期时间分散、预加载或采用Redis集群等方式避免。
 * 缓存一致性：当数据库数据发生变化时，需要及时更新缓存，避免数据不一致。可以采用主动更新策略（如监听数据库binlog）或被动更新策略（如在读取时判断数据新鲜度）。
 * 而对于数据缓存，我们常使用的业务场景如热点数据存储、全页缓存等。
 */
package org.czg.redis.center.biz.cache;